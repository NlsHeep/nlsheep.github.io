<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>【图模型】第二章-贝叶斯网络</title>
      <link href="2020/11/29/%E3%80%90%E5%9B%BE%E6%A8%A1%E5%9E%8B%E3%80%91%E7%AC%AC%E4%BA%8C%E7%AB%A0%E8%B4%9D%E5%8F%B6%E6%96%AF%E7%BD%91%E7%BB%9C/"/>
      <url>2020/11/29/%E3%80%90%E5%9B%BE%E6%A8%A1%E5%9E%8B%E3%80%91%E7%AC%AC%E4%BA%8C%E7%AB%A0%E8%B4%9D%E5%8F%B6%E6%96%AF%E7%BD%91%E7%BB%9C/</url>
      
        <content type="html"><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>概率图模型由一个图和一组随机变量组成。它表示一个联合概率分布，其中图捕获了随机变量之间的条件独立性关系。</p><p>让我们来思考如下一种情况，假设有一组随机变量${X_1,X_2,…,X_n}$，其中每一个随机变量有v个取值。则n个随机变量的样本空间为$V^n$。这意味着在n或V取很大时，联合概率的获取、存储和计算都变得十分困难。</p><p>而利用图模型我们可以利用一系列变量之间的“局部”关系来更经济地表达联合概率分布，在图理论中我们将定义一系列“局部”关系（当然好处不止这些但这里不继续展开，例如还有优化条件概率的判断，方便利用概率建模等）。</p><h1 id="1-有向图和联合概率"><a href="#1-有向图和联合概率" class="headerlink" title="1 有向图和联合概率"></a>1 有向图和联合概率</h1><h2 id="1-1-贝叶斯网络的介绍"><a href="#1-1-贝叶斯网络的介绍" class="headerlink" title="1.1 贝叶斯网络的介绍"></a>1.1 贝叶斯网络的介绍</h2><p>贝叶斯网络（Bayesian network）是一种概率图模型，是一个有向无环图（directed acyclic graph,DAG），它是一种模拟人类推理过程中因果关系的不确定性处理模型。我们将有因果关系（或非条件独立）的变量或命题用箭头来连接。若两个节点间以一个单箭头连接在一起，表示其中一个节点是“因(parents)”，另一个是“果(children)”，两节点就会产生一个条件概率值。 例如，假设节点A直接影响到节点B，即A→B ，则用从E指向H的箭头建立结点A到结点V的有向弧(A,B)，权值(即连接强度)用条件概率P(B|A)来表示，如下图所示： </p><p><img src="https://i.loli.net/2020/11/25/aXWjJVqZHNLKIC5.png" alt="image-20201125235257223"></p><h2 id="1-2-贝叶斯网络的定义"><a href="#1-2-贝叶斯网络的定义" class="headerlink" title="1.2 贝叶斯网络的定义"></a>1.2 贝叶斯网络的定义</h2><p>令$\mathcal{G(V,E)}$表示一个有向无环图（DAG），其中$\mathcal{V}$表示节点集，$\mathcal{E}$表示边集，每个随机变量$X_i$对应一个节点$i\in\mathcal{V}$。</p><p>$X_{\pi_i}$为$X_i$的父节点集合。若节点X的联合概率可以表示成：</p><script type="math/tex; mode=display">p(x_1,x_2,...,x_n)=\prod_{i\in\mathcal{V}}p(x_i|x_{\pi_i})\tag{1.1}</script><p>则称X为相对于有向无环图$\mathcal{G}$的贝叶斯网络。</p><p>此外，对任意随机变量，我们有Chain Rule，其联合概率可以写成：</p><script type="math/tex; mode=display">p(x_1,x_2,...,x_n)=p(x_n|x_1,x_2,...,x_{n-1})...p(x_2|x_1)p(x_1)\tag{1.2}</script><h2 id="1-3-贝叶斯网络的示例"><a href="#1-3-贝叶斯网络的示例" class="headerlink" title="1.3 贝叶斯网络的示例"></a>1.3 贝叶斯网络的示例</h2><h3 id="1-3-1-学生示例"><a href="#1-3-1-学生示例" class="headerlink" title="1.3.1 学生示例"></a>1.3.1 学生示例</h3><p>示例描述：一家公司准备招聘一个刚毕业的大学生。公司的目标是希望雇到聪明的雇员，但没有直接测试智力的方法。不过，公司了解学生的SAT成绩——它富含信息，但并不能完全代表学生的真实情况。这样，概率空间由两个随机变量：智力（I）和SAT（S）导出。这里为了简单起见，假设每个变量都是二值的。则有$Val(I)={i^0,i^1}$，表示高智商$(i^1)$与低智商$(i^0)$的值，类似地，$Val(S)={s^0,s^1}$表示高分$(s^1)$与低分$(s^0)$值。  </p><p>  这样，在这个例子中，联合分布有四个表值。例如，一个可能的联合分布P为： </p><p><img src="https://i.loli.net/2020/11/28/tcUXfP5q7QuGlWH.png" alt="image-20201128222558858"></p><p>按照这个图中所示，我们一共需要三个独立参数来表示该联合分布（最后一个参数可以用1减去其他所有的得到）。然而，对于该联合分布，我们有一个更自然的表示方法，那就是利用条件概率的链式法则：</p><script type="math/tex; mode=display">P(S,I)=P(I)P(S|I)</script><p><img src="https://i.loli.net/2020/11/28/t4wNFRgTXnaSJyY.png" alt="I和S的关系如图示"></p><p>直观上，我们正在以一种与因果关系更加匹配的表示方式，多个因素(遗传、培养…)首先决定了学生的智商。而他的智商决定了他的SAT成绩。因此，从数学角度，我们可以使用$P(I)$和$P(S|I)$来一起表示联合分布，而不是具体的把$P(S,I)$的每一个表值列举出来。按照上诉方法表示联合概率的话，我们可以使用如下两个表来表达其联合概率:<br><img src="https://i.loli.net/2020/11/28/V4tg7HyvUbTYKpq.png" alt="image-20201128223733689"></p><p>按照这种替代方法，我们可以观察到需要的独立参数为1+2，可以发现，虽然条件表示比联合分布显得更加自然，但却不会更紧凑。尽管如此，也为我们利用条件参数化紧凑更复杂的分布奠定了基础。</p><h3 id="1-3-2-学生示例扩展"><a href="#1-3-2-学生示例扩展" class="headerlink" title="1.3.2 学生示例扩展"></a>1.3.2 学生示例扩展</h3><p>我们将示例再扩展一下，现在假设公司同时还知道学生某些课程的成绩G。且G的值可以取三个值$g^1,g^2,g^3$分别代表成绩A，B，C。那么联合分布可以将拥有12个表值（需要11个独立参数）。</p><p>并且根据经验来说，在此分布中，分布P满足条件独立性性质，也就是说如果我们知道一个学生是高智商，那么他在SAT考试中获得高分并不能为我们带来任何有关他课程成绩的信息。更形式化的表达为：</p><script type="math/tex; mode=display">p(g|i^1,s^1)=p(g|i^1)</script><p>更一般的情况下，可以假设：</p><script type="math/tex; mode=display">S\perp G|I</script><p>其图像为：</p><p><img src="https://i.loli.net/2020/11/29/dn4RB38TYg7I2hF.png" alt="image-20201129001533325"></p><p>因此，我们有：</p><script type="math/tex; mode=display">P(I,S,G)=P(S,G|I)P(I)</script><p>其中：</p><script type="math/tex; mode=display">P(S,G|I)=P(S|I)P(G|I)</script><p>所以我们最终得到：</p><script type="math/tex; mode=display">P(I,S,G)=P(S|I)P(G|I)P(I)</script><p>因此，表达该联合分布需要三个条件概率分布：$P(S|I),P(G|I),P(I)$，其中$P(S|I),P(I)$在之前已经讨论过，而$P(G|I)$可以用如下表表示：</p><p><img src="https://i.loli.net/2020/11/29/OcEKtZikJIgd2QU.png" alt="image-20201129000734421"></p><p>则该表需要4个参数来表示。那我们利用该方式表示联合分布总共需要1+2+4=7个独立参数，而原先独立分布的表值为12（需要11个独立参数），则我们可以得知该方式起到了<strong>紧凑</strong>的作用。</p><h3 id="1-3-3-学生示例再扩展"><a href="#1-3-3-学生示例再扩展" class="headerlink" title="1.3.3 学生示例再扩展"></a><del>1.3.3 学生示例再扩展</del></h3><p><del>我们现在考虑一种更复杂的情况，学生的成绩不仅取决于他的智商，同时也取决于课程的难度。课程的难度用随机变量D来表示，则D的值域$Val(D)={easy,hard}$表示。学生请求教授为其写推荐信，而教授健忘且从来不记学生的名字，因此教授通过查看学生的成绩来决定是否写推荐信。推荐信的好坏用随机变量L表示，其值域用$Val(L)={strong,weak}$表示。推荐信的实际好坏随机依赖于考试的成绩。</del></p><p><del>因此，该问题包含五个随机变量，因此，联合分布可取值的总数为48。</del></p><p><del>依照示例给出的条件，我们可以画出其贝叶斯网络：</del></p><p><del><img src="https://i.loli.net/2020/11/29/N3YSDou9OaVInkd.png" alt="image-20201129003209324"></del></p><p><del>依照前面的定义</del></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>这一示例展示了利用图来更加有效地表示联合概率分布的重要性，但是，这仅仅只是图和概率结合优势的一小部分。在我们后面的学习中我们会发现图不仅仅只是提供了数据结构，还提供了自动化的inference来求出所需要的概率分布问题。</p><h1 id="2-条件独立性"><a href="#2-条件独立性" class="headerlink" title="2 条件独立性"></a>2 条件独立性</h1><p>我们要处理一个十分重要的概率分布问题是寻找随机变量之中的条件独立性。我们想知道哪些变量集合独立于另一个变量集合，或者是在给定第三个变量集合的情况下这两者独立。</p><p>贝叶斯网是概率论与图论相结合的产物。在一个贝叶斯网中，一方面可以从概率论的角度谈论变量之间的依赖与独立，另一方面也可以从图论的角度谈论节点之间的连通与分离。</p><p>下面我们将给出独立性和条件独立性的定义。</p><h2 id="2-1-独立性与条件独立性的定义"><a href="#2-1-独立性与条件独立性的定义" class="headerlink" title="2.1 独立性与条件独立性的定义"></a>2.1 独立性与条件独立性的定义</h2><p><strong>独立性(indepencence)</strong>：</p><p>若</p><script type="math/tex; mode=display">p(x_A,x_B)=p(x_A)p(x_B)</script><p>则称$X_A$独立于$X_B$，记作$X_A\perp X_B$。</p><p><strong>条件独立性(conditional independence)</strong>：</p><p>如果</p><script type="math/tex; mode=display">p(x_A,x_C|x_B)=p(x_A|x_B)p(x_C|x_B)</script><p>或者说</p><script type="math/tex; mode=display">p(x_A|x_B,x_C)=p(x_A|x_B)</script><p>则$X_A$和$X_C$在给定$X_B$的情况下条件独立，记作$X_A\perp X_C|X_B$。</p><h2 id="2-2-三种条件独立的基本情况"><a href="#2-2-三种条件独立的基本情况" class="headerlink" title="2.2 三种条件独立的基本情况"></a>2.2 三种条件独立的基本情况</h2><p>考虑两个变量X和Z通过第三个变量Y间接相连这一基本情况。它又分为3个子情况：</p><ol><li><p><strong>顺连（serial connection）：</strong></p><p><img src="https://i.loli.net/2020/11/29/hPGMvS7K5HX9iFo.png" alt="image-20201129142707849"></p><p>在已知Y时，X与Z相互独立；在未知Y时，X和Z相互关联。</p></li><li><p><strong>分连（diverging connection）：</strong></p><p><img src="https://i.loli.net/2020/11/29/cwV9rkgSBWoMYj2.png" alt="image-20201129143038556"></p><p>这种情况与顺连类似。在已知Y时，X与Z相互独立；在未知Y时，X和Z相互关联。</p></li><li><p><strong>汇连（converging connection）：</strong></p><p><img src="https://i.loli.net/2020/11/29/1AOuFDmP4ZMvxNT.png" alt="image-20201129143951927"></p><p>这是最特殊的一种情况，正好与上面的分连相反。在已知Y时，X和Z相互连接；在未知Y时，X和Z相互独立。</p></li></ol><h2 id="2-3-D-分离"><a href="#2-3-D-分离" class="headerlink" title="2.3 D-分离"></a>2.3 D-分离</h2><p>上一节我们讨论了三种图中的基本情况，对于较为复杂的DAG图，我们可以给出一个普遍意义上的结论，也就是D-Seperation。对于DAG图G，如果A，B，C是三个集合（可以是单独的节点或者是节点的集合），为了判断A和B是否关于C是条件独立的，我们考虑图中AB之间的所有路径，对于其中的一条路径，如果它满足以下两个条件中的任意一个，则称这条路径是<strong>阻塞（block）</strong>的：</p><ol><li>路径中存在某个节点 X 是<strong>顺连</strong>或者<strong>分连</strong>节点（上一节的情况1和2），并且 X 是包含在 C 中的；</li><li>路径中存在某个节点 X 是<strong>汇连</strong>节点（情况3），并且 X 或 X 的儿子是<strong>不</strong>包含在 C 中的；</li></ol><p>如果A，B之间的所有路径都是阻塞的，那么A和B就是关于C条件独立的；否则A，B不是关于C条件独立的。</p><h3 id="2-3-1-D-分离的应用例子"><a href="#2-3-1-D-分离的应用例子" class="headerlink" title="2.3.1 D-分离的应用例子"></a>2.3.1 D-分离的应用例子</h3><p><img src="https://i.loli.net/2020/11/29/dBJk2jhAnGD7mgX.png" alt="image-20201129150613650"></p><p>判断<strong>（1）A与B是否在C条件下独立？</strong></p><p><strong>（2）A与B是否在F条件下独立？</strong></p><p>对于（1）：A到B只有一条路金A-&gt;E-&gt;F-&gt;B。考虑路径上的点E和F ：其中E是<strong>汇连</strong>类型的，且E的儿子节点就是C，根据之前D-分离的第二个判断，E不阻断。而节点F是<strong>分连</strong>类型节点，根据第一条，F不在C中，所以也有A，B不是C条件下独立。</p><p>对于（2）：路径A-&gt;E-&gt;F-&gt;B上的所有节点。考虑路径上的点E和F：节点E是<strong>汇连</strong>类型的，E和她的儿子节点C都不在F中，所以第二条，E是阻断路径的节点。节点F是<strong>分连</strong>类型节点，且F节点就在F中，所以F节点阻断了路径。 结论：A和B是F下条件独立的。</p><h1 id="3-图与分布"><a href="#3-图与分布" class="headerlink" title="3 图与分布"></a>3 图与分布</h1><p>前面的内容我们讨论了贝叶斯网的图论方面（D-分离）和它的概率论方面（联合概率分布中的条件独立）之间的关系。在本节中，我们更一般地讨论DAG图和联合概率分布之间的关系：一方面用DAG图来刻画联合概率的某些性质，另一方面相对于联合概率分布定义一些图论概念。</p><p>设V为一个随机变量的集合，P是V的一个联合概率分布，$\mathcal{G}$是以V中变量为节点的一个DAG图，设X，Y，Z为V的3个两两不相交的子集合。引入如下的两个记号：</p><p>（1）$X\perp Y |Z$：表示在P中，给定Z，X与Y相互条件独立；</p><p>（2）$S_\mathcal{G}(X,Y,Z)$：表示在$\mathcal{G}$中，Z d-分离 X和Y。</p><p>利用DAG图$\mathcal{G}$，我们可以定义如下3个关于联合概率分布P的性质：</p><p>（1）P是$\mathcal{G}$<strong>可分解的</strong>，如果存在一个以$\mathcal{G}$为结构的贝叶斯网，它所表示的联合概率分布正好是P；</p><p>（2）<strong>P具有整体$\mathcal{G}$马尔可夫性</strong>，如果</p><script type="math/tex; mode=display">S_\mathcal{G}(X,Y,Z)\Rightarrow X\perp Y| Z</script><p>即$\mathcal{G}$中的d-分离意味着P中的条件独立。</p><p>（3）<strong>P具有局部$\mathcal{G}$马尔可夫性</strong>，如果对于$\mathcal{G}$中任意一个节点X，</p><script type="math/tex; mode=display">X\perp nonDecentX|X_\pi</script><p>即在P中，X在给定它在$\mathcal{G}$中的父节点时，条件独立于它在$\mathcal{G}$中的所有非后代节点。</p><p><strong>定理3.1</strong>：假设P为一个变量集合V的联合概率分布，$\mathcal{G}$为定义于V上的一个DAG图，则以下三个陈述是等价的：</p><p>（1）P是$\mathcal{G}$<strong>可分解的</strong>；</p><p>（2）P具有<strong>整体$\mathcal{G}$马尔可夫性</strong></p><p>（3）P具<strong>有局部$\mathcal{G}$马尔可夫性</strong></p><p>相对于联合分布P，可以定义如下两个关于DAG图的性质：</p><p>（1）$\mathcal{G}$是P的<strong>独立图</strong>(independence map)，建成I-map，如果</p><script type="math/tex; mode=display">S_\mathcal{G}(X,Y,Z)\Rightarrow X\perp Y| Z</script><p>（2）$\mathcal{G}$是P的<strong>依赖图</strong>(dependence map)，建成D-map，如果</p><script type="math/tex; mode=display">X\perp Y| Z \Rightarrow S_\mathcal{G}(X,Y,Z)</script><p>（3）若$\mathcal{G}$是P的独立图也是P的依赖图，则称它为P的<strong>完美图</strong>（perfect map），建成P-map。</p><p>I-map表示P中的独立关系，其中蕴含的条件独立关系是P中所有条件独立关系的一个自己，因此，在I-map中加一条边，所得到的仍然是I-map。类似的，从D-map中去掉一条边依旧是D-map。</p><p>如果一个I-map去掉一条边后它不再是I-map,则称这个I-map为<strong>最小独立图</strong>(minimal I-map)。</p>]]></content>
      
      
      <categories>
          
          <category> 图模型 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 图模型 </tag>
            
            <tag> 贝叶斯网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【LeetCode每日】1370.上升下降字符串</title>
      <link href="2020/11/25/leetcode1370/"/>
      <url>2020/11/25/leetcode1370/</url>
      
        <content type="html"><![CDATA[<h1 id="1370-上升下降字符串"><a href="#1370-上升下降字符串" class="headerlink" title="1370. 上升下降字符串"></a><a href="https://leetcode-cn.com/problems/increasing-decreasing-string/">1370. 上升下降字符串</a></h1><p>Difficulty: <strong>简单</strong></p><p>给你一个字符串 <code>s</code> ，请你根据下面的算法重新构造字符串：</p><ol><li>从 <code>s</code> 中选出 <strong>最小</strong> 的字符，将它 <strong>接在</strong> 结果字符串的后面。</li><li>从 <code>s</code> 剩余字符中选出 <strong>最小</strong> 的字符，且该字符比上一个添加的字符大，将它 <strong>接在</strong> 结果字符串后面。</li><li>重复步骤 2 ，直到你没法从 <code>s</code> 中选择字符。</li><li>从 <code>s</code> 中选出 <strong>最大</strong> 的字符，将它 <strong>接在</strong> 结果字符串的后面。</li><li>从 <code>s</code> 剩余字符中选出 <strong>最大</strong> 的字符，且该字符比上一个添加的字符小，将它 <strong>接在</strong> 结果字符串后面。</li><li>重复步骤 5 ，直到你没法从 <code>s</code> 中选择字符。</li><li>重复步骤 1 到 6 ，直到 <code>s</code> 中所有字符都已经被选过。</li></ol><p>在任何一步中，如果最小或者最大字符不止一个 ，你可以选择其中任意一个，并将其添加到结果字符串。</p><p>请你返回将 <code>s</code> 中字符重新排序后的 <strong>结果字符串</strong> 。</p><p><strong>示例 1：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">输入：s &#x3D; &quot;aaaabbbbcccc&quot;</span><br><span class="line">输出：&quot;abccbaabccba&quot;</span><br><span class="line">解释：第一轮的步骤 1，2，3 后，结果字符串为 result &#x3D; &quot;abc&quot;</span><br><span class="line">第一轮的步骤 4，5，6 后，结果字符串为 result &#x3D; &quot;abccba&quot;</span><br><span class="line">第一轮结束，现在 s &#x3D; &quot;aabbcc&quot; ，我们再次回到步骤 1</span><br><span class="line">第二轮的步骤 1，2，3 后，结果字符串为 result &#x3D; &quot;abccbaabc&quot;</span><br><span class="line">第二轮的步骤 4，5，6 后，结果字符串为 result &#x3D; &quot;abccbaabccba&quot;</span><br></pre></td></tr></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入：s &#x3D; &quot;rat&quot;</span><br><span class="line">输出：&quot;art&quot;</span><br><span class="line">解释：单词 &quot;rat&quot; 在上述算法重排序以后变成 &quot;art&quot;</span><br></pre></td></tr></table></figure><p><strong>示例 3：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：s &#x3D; &quot;leetcode&quot;</span><br><span class="line">输出：&quot;cdelotee&quot;</span><br></pre></td></tr></table></figure><p><strong>示例 4：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：s &#x3D; &quot;ggggggg&quot;</span><br><span class="line">输出：&quot;ggggggg&quot;</span><br></pre></td></tr></table></figure><p><strong>示例 5：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：s &#x3D; &quot;spo&quot;</span><br><span class="line">输出：&quot;ops&quot;</span><br></pre></td></tr></table></figure><p><strong>提示：</strong></p><ul><li><code>1 &lt;= s.length &lt;= 500</code></li><li><code>s</code> 只包含小写英文字母。</li></ul><h1 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h1><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="built_in">string</span> <span class="title">sortString</span><span class="params">(<span class="built_in">string</span> s)</span> </span>&#123;</span><br><span class="line">        <span class="function"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; <span class="title">v</span><span class="params">(<span class="number">26</span>,<span class="number">0</span>)</span></span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;s.size();++i)v[s[i]-<span class="string">&#x27;a&#x27;</span>]++;<span class="comment">//用数组v保存出现在字符串s中的字母表</span></span><br><span class="line">        <span class="keyword">int</span> i=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(i&lt;s.size())&#123;<span class="comment">//重新将新的字母按照规则依次插入s</span></span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;<span class="number">26</span>;++j)&#123;<span class="comment">//正着来一遍，按照字典序列从小到大插入</span></span><br><span class="line">                <span class="keyword">if</span>(v[j]!=<span class="number">0</span>)&#123;</span><br><span class="line">                    v[j]--;</span><br><span class="line">                    s[i++]=<span class="string">&#x27;a&#x27;</span>+j;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">25</span>;j&gt;=<span class="number">0</span>;--j)&#123;<span class="comment">//反着来一遍，按照字典序列从大到小插入</span></span><br><span class="line">                <span class="keyword">if</span>(v[j]!=<span class="number">0</span>)&#123;</span><br><span class="line">                    v[j]--;</span><br><span class="line">                    s[i++]=<span class="string">&#x27;a&#x27;</span>+j;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> s;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【LeetCode每日】222.完全二叉树的节点个数</title>
      <link href="2020/11/24/leetcode222/"/>
      <url>2020/11/24/leetcode222/</url>
      
        <content type="html"><![CDATA[<h1 id="222-完全二叉树的节点个数"><a href="#222-完全二叉树的节点个数" class="headerlink" title="222. 完全二叉树的节点个数"></a><a href="https://leetcode-cn.com/problems/count-complete-tree-nodes/">222. 完全二叉树的节点个数</a></h1><p>Difficulty: <strong>中等</strong></p><p>给出一个<strong>完全二叉树</strong>，求出该树的节点个数。</p><p><strong>说明：</strong></p><p>的定义如下：在完全二叉树中，除了最底层节点可能没填满外，其余每层节点数都达到最大值，并且最下面一层的节点都集中在该层最左边的若干位置。若最底层为第 h 层，则该层包含 1~ 2<sup>h</sup> 个节点。</p><p><strong>示例:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">输入: </span><br><span class="line">    1</span><br><span class="line">   &#x2F; \</span><br><span class="line">  2   3</span><br><span class="line"> &#x2F; \  &#x2F;</span><br><span class="line">4  5 6</span><br><span class="line"></span><br><span class="line">输出: 6</span><br></pre></td></tr></table></figure><h2 id="思路："><a href="#思路：" class="headerlink" title="思路："></a>思路：</h2><p>其实这道题最好的方法是利用完全二叉树的性质，但是懒得写了。。</p><p>直接暴力dfs就好啦。</p><h4 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="keyword">int</span> num=<span class="number">0</span>;</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">countNodes</span><span class="params">(TreeNode* root)</span> </span>&#123;</span><br><span class="line">        dfs(root);</span><br><span class="line">        <span class="keyword">return</span> num;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(TreeNode* root)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(root==<span class="literal">NULL</span>)<span class="keyword">return</span>;</span><br><span class="line">        ++num;</span><br><span class="line">        dfs(root-&gt;left);dfs(root-&gt;right);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【LeetCode每日】452.用最少数量的箭引爆气球</title>
      <link href="2020/11/23/leetcode452/"/>
      <url>2020/11/23/leetcode452/</url>
      
        <content type="html"><![CDATA[<h1 id="452-用最少数量的箭引爆气球"><a href="#452-用最少数量的箭引爆气球" class="headerlink" title="452. 用最少数量的箭引爆气球"></a><a href="https://leetcode-cn.com/problems/minimum-number-of-arrows-to-burst-balloons/">452. 用最少数量的箭引爆气球</a></h1><p>Difficulty: <strong>中等</strong></p><p>在二维空间中有许多球形的气球。对于每个气球，提供的输入是水平方向上，气球直径的开始和结束坐标。由于它是水平的，所以纵坐标并不重要，因此只要知道开始和结束的横坐标就足够了。开始坐标总是小于结束坐标。</p><p>一支弓箭可以沿着 x 轴从不同点完全垂直地射出。在坐标 x 处射出一支箭，若有一个气球的直径的开始和结束坐标为 <code>x</code><sub style="display: inline;"><code>start</code>，</sub><code>x</code><sub style="display: inline;"><code>end</code>，</sub> 且满足  <code>x&lt;sub style=&quot;display: inline;&quot;&gt;start&lt;/sub&gt; ≤ x ≤ x</code><sub style="display: inline;"><code>end</code>，</sub>则该气球会被引爆<sub style="display: inline;">。</sub>可以射出的弓箭的数量没有限制。 弓箭一旦被射出之后，可以无限地前进。我们想找到使得所有气球全部被引爆，所需的弓箭的最小数量。</p><p>给你一个数组 <code>points</code> ，其中 <code>points [i] = [x&lt;sub style=&quot;display: inline;&quot;&gt;start&lt;/sub&gt;,x&lt;sub style=&quot;display: inline;&quot;&gt;end&lt;/sub&gt;]</code> ，返回引爆所有气球所必须射出的最小弓箭数。</p><p><strong>示例 1：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入：points &#x3D; [[10,16],[2,8],[1,6],[7,12]]</span><br><span class="line">输出：2</span><br><span class="line">解释：对于该样例，x &#x3D; 6 可以射爆 [2,8],[1,6] 两个气球，以及 x &#x3D; 11 射爆另外两个气球</span><br></pre></td></tr></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：points &#x3D; [[1,2],[3,4],[5,6],[7,8]]</span><br><span class="line">输出：4</span><br></pre></td></tr></table></figure><p><strong>示例 3：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：points &#x3D; [[1,2],[2,3],[3,4],[4,5]]</span><br><span class="line">输出：2</span><br></pre></td></tr></table></figure><p><strong>示例 4：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：points &#x3D; [[1,2]]</span><br><span class="line">输出：1</span><br></pre></td></tr></table></figure><p><strong>示例 5：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：points &#x3D; [[2,3],[2,3]]</span><br><span class="line">输出：1</span><br></pre></td></tr></table></figure><p><strong>提示：</strong></p><ul><li><code>0 &lt;= points.length &lt;= 10&lt;sup&gt;4&lt;/sup&gt;</code></li><li><code>points[i].length == 2</code></li><li><code>-2&lt;sup&gt;31&lt;/sup&gt; &lt;= x&lt;sub style=&quot;display: inline;&quot;&gt;start&lt;/sub&gt; &lt; x&lt;sub style=&quot;display: inline;&quot;&gt;end&lt;/sub&gt; &lt;= 2&lt;sup&gt;31&lt;/sup&gt; - 1</code></li></ul><h4 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//思路：贪心，按照每个元素右边来进行重新排序</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">static</span> <span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; &amp;a,<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; &amp;b)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> a[<span class="number">1</span>]&lt;b[<span class="number">1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">findMinArrowShots</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; &gt;&amp; points)</span> </span>&#123;</span><br><span class="line">        sort(points.begin(),points.end(),cmp);<span class="comment">//按照右端大小按照从小到大重新排序</span></span><br><span class="line">        <span class="keyword">int</span> i=<span class="number">0</span>,res=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(i&lt;points.size())&#123;<span class="comment">//进行一次循环</span></span><br><span class="line">            <span class="keyword">int</span> l=points[i][<span class="number">0</span>],r=points[i][<span class="number">1</span>];</span><br><span class="line">            <span class="keyword">int</span> j=i;</span><br><span class="line">            <span class="keyword">while</span>(l&lt;=r&amp;&amp;j&lt;points.size())&#123;<span class="comment">//循环一支箭可以射穿的所有气球</span></span><br><span class="line">                <span class="keyword">if</span>(points[j][<span class="number">0</span>]&gt;r)<span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">else</span> l= max(l,points[j++][<span class="number">0</span>]);</span><br><span class="line">            &#125;</span><br><span class="line">            res++;<span class="comment">//答案加一</span></span><br><span class="line">            i=j;<span class="comment">//将i重新定位到还未被射穿的气球</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【LeetCode周赛】第216周</title>
      <link href="2020/11/22/1/"/>
      <url>2020/11/22/1/</url>
      
        <content type="html"><![CDATA[<h1 id="5605-检查两个字符串数组是否相等"><a href="#5605-检查两个字符串数组是否相等" class="headerlink" title="5605. 检查两个字符串数组是否相等"></a><a href="https://leetcode-cn.com/problems/check-if-two-string-arrays-are-equivalent/">5605. 检查两个字符串数组是否相等</a></h1><p>Difficulty: <strong>简单</strong></p><p>给你两个字符串数组 <code>word1</code> 和 <code>word2</code> 。如果两个数组表示的字符串相同，返回<code>true</code>；否则，返回 <code>false</code> <em>。</em></p><p><strong>数组表示的字符串</strong> 是由数组中的所有元素 <strong>按顺序</strong> 连接形成的字符串。</p><p><strong>示例 1：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">输入：word1 &#x3D; [&quot;ab&quot;, &quot;c&quot;], word2 &#x3D; [&quot;a&quot;, &quot;bc&quot;]</span><br><span class="line">输出：true</span><br><span class="line">解释：</span><br><span class="line">word1 表示的字符串为 &quot;ab&quot; + &quot;c&quot; -&gt; &quot;abc&quot;</span><br><span class="line">word2 表示的字符串为 &quot;a&quot; + &quot;bc&quot; -&gt; &quot;abc&quot;</span><br><span class="line">两个字符串相同，返回 true</span><br></pre></td></tr></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：word1 &#x3D; [&quot;a&quot;, &quot;cb&quot;], word2 &#x3D; [&quot;ab&quot;, &quot;c&quot;]</span><br><span class="line">输出：false</span><br></pre></td></tr></table></figure><p><strong>示例 3：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：word1  &#x3D; [&quot;abc&quot;, &quot;d&quot;, &quot;defg&quot;], word2 &#x3D; [&quot;abcddefg&quot;]</span><br><span class="line">输出：true</span><br></pre></td></tr></table></figure><p><strong>提示：</strong></p><ul><li><code>1 &lt;= word1.length, word2.length &lt;= 10&lt;sup&gt;3&lt;/sup&gt;</code></li><li><code>1 &lt;= word1[i].length, word2[i].length &lt;= 10&lt;sup&gt;3&lt;/sup&gt;</code></li><li><code>1 &lt;= sum(word1[i].length), sum(word2[i].length) &lt;= 10&lt;sup&gt;3&lt;/sup&gt;</code></li><li><code>word1[i]</code> 和 <code>word2[i]</code> 由小写字母组成</li></ul><h4 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">arrayStringsAreEqual</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="built_in">string</span>&gt;&amp; word1, <span class="built_in">vector</span>&lt;<span class="built_in">string</span>&gt;&amp; word2)</span> </span>&#123;</span><br><span class="line">        <span class="built_in">string</span> s1,s2;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">auto</span> n:word1)s1+=n;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">auto</span> n:word2)s2+=n;</span><br><span class="line">        <span class="keyword">return</span> s1==s2;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h1 id="5606-具有给定数值的最小字符串"><a href="#5606-具有给定数值的最小字符串" class="headerlink" title="5606. 具有给定数值的最小字符串"></a><a href="https://leetcode-cn.com/problems/smallest-string-with-a-given-numeric-value/">5606. 具有给定数值的最小字符串</a></h1><p>Difficulty: <strong>中等</strong></p><p><strong>小写字符</strong> 的 <strong>数值</strong> 是它在字母表中的位置（从 <code>1</code> 开始），因此 <code>a</code> 的数值为 <code>1</code> ，<code>b</code> 的数值为 <code>2</code> ，<code>c</code> 的数值为 <code>3</code> ，以此类推。</p><p>字符串由若干小写字符组成，<strong>字符串的数值</strong> 为各字符的数值之和。例如，字符串 <code>&quot;abe&quot;</code> 的数值等于 <code>1 + 2 + 5 = 8</code> 。</p><p>给你两个整数 <code>n</code> 和 <code>k</code> 。返回 <strong>长度</strong> 等于 <code>n</code> 且 <strong>数值</strong> 等于 <code>k</code> 的 <strong>字典序最小</strong> 的字符串。</p><p>注意，如果字符串 <code>x</code> 在字典排序中位于 <code>y</code> 之前，就认为 <code>x</code> 字典序比 <code>y</code> 小，有以下两种情况：</p><ul><li><code>x</code> 是 <code>y</code> 的一个前缀；</li><li>如果 <code>i</code> 是 <code>x[i] != y[i]</code> 的第一个位置，且 <code>x[i]</code> 在字母表中的位置比 <code>y[i]</code> 靠前。</li></ul><p><strong>示例 1：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入：n &#x3D; 3, k &#x3D; 27</span><br><span class="line">输出：&quot;aay&quot;</span><br><span class="line">解释：字符串的数值为 1 + 1 + 25 &#x3D; 27，它是数值满足要求且长度等于 3 字典序最小的字符串。</span><br></pre></td></tr></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：n &#x3D; 5, k &#x3D; 73</span><br><span class="line">输出：&quot;aaszz&quot;</span><br></pre></td></tr></table></figure><p><strong>提示：</strong></p><ul><li><code>1 &lt;= n &lt;= 10&lt;sup&gt;5&lt;/sup&gt;</code></li><li><code>n &lt;= k &lt;= 26 * n</code></li></ul><h4 id="Solution-1"><a href="#Solution-1" class="headerlink" title="Solution"></a>Solution</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//思路：先默认全部是a，然后再依次从最后开始转变（贪心）</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="built_in">string</span> <span class="title">getSmallestString</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span> k)</span> </span>&#123;</span><br><span class="line">        <span class="function"><span class="built_in">vector</span>&lt;<span class="keyword">char</span>&gt; <span class="title">res</span><span class="params">(n,<span class="string">&#x27;a&#x27;</span>)</span></span>;<span class="comment">//假设全部是a</span></span><br><span class="line">        k-=n;<span class="comment">//将全部是a的值减去得到剩余需要处理的k值</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=res.size()<span class="number">-1</span>;i&gt;=<span class="number">0</span>;--i)&#123;<span class="comment">//从最后开始遍历</span></span><br><span class="line">            <span class="keyword">if</span>(k&gt;=<span class="number">26</span>)&#123;<span class="comment">//如果k大于等于26.那么一定是专成z了</span></span><br><span class="line">                res[i]=<span class="string">&#x27;z&#x27;</span>;</span><br><span class="line">                k-=<span class="number">25</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;<span class="comment">//转成对应字母并结束循环</span></span><br><span class="line">                res[i]=<span class="string">&#x27;a&#x27;</span>+k;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">string</span> s;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">auto</span> n:res)s+=n;<span class="comment">//将数组转成字符串并返回</span></span><br><span class="line">        <span class="keyword">return</span> s;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h1 id="5607-生成平衡数组的方案数"><a href="#5607-生成平衡数组的方案数" class="headerlink" title="5607. 生成平衡数组的方案数"></a><a href="https://leetcode-cn.com/problems/ways-to-make-a-fair-array/">5607. 生成平衡数组的方案数</a></h1><p>Difficulty: <strong>中等</strong></p><p>给你一个整数数组 <code>nums</code> 。你需要选择 <strong>恰好</strong> 一个下标（下标从 <strong>0</strong> 开始）并删除对应的元素。请注意剩下元素的下标可能会因为删除操作而发生改变。</p><p>比方说，如果 <code>nums = [6,1,7,4,1]</code> ，那么：</p><ul><li>选择删除下标 <code>1</code> ，剩下的数组为 <code>nums = [6,7,4,1]</code> 。</li><li>选择删除下标 <code>2</code> ，剩下的数组为 <code>nums = [6,1,4,1]</code> 。</li><li>选择删除下标 <code>4</code> ，剩下的数组为 <code>nums = [6,1,7,4]</code> 。</li></ul><p>如果一个数组满足奇数下标元素的和与偶数下标元素的和相等，该数组就是一个 <strong>平衡数组</strong> 。</p><p>请你返回删除操作后，剩下的数组<code>nums</code>是 <strong>平衡数组</strong> 的 <strong>方案数</strong> 。</p><p><strong>示例 1：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">输入：nums &#x3D; [2,1,6,4]</span><br><span class="line">输出：1</span><br><span class="line">解释：</span><br><span class="line">删除下标 0 ：[1,6,4] -&gt; 偶数元素下标为：1 + 4 &#x3D; 5 。奇数元素下标为：6 。不平衡。</span><br><span class="line">删除下标 1 ：[2,6,4] -&gt; 偶数元素下标为：2 + 4 &#x3D; 6 。奇数元素下标为：6 。平衡。</span><br><span class="line">删除下标 2 ：[2,1,4] -&gt; 偶数元素下标为：2 + 4 &#x3D; 6 。奇数元素下标为：1 。不平衡。</span><br><span class="line">删除下标 3 ：[2,1,6] -&gt; 偶数元素下标为：2 + 6 &#x3D; 8 。奇数元素下标为：1 。不平衡。</span><br><span class="line">只有一种让剩余数组成为平衡数组的方案。</span><br></pre></td></tr></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入：nums &#x3D; [1,1,1]</span><br><span class="line">输出：3</span><br><span class="line">解释：你可以删除任意元素，剩余数组都是平衡数组。</span><br></pre></td></tr></table></figure><p><strong>示例 3：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入：nums &#x3D; [1,2,3]</span><br><span class="line">输出：0</span><br><span class="line">解释：不管删除哪个元素，剩下数组都不是平衡数组。</span><br></pre></td></tr></table></figure><p><strong>提示：</strong></p><ul><li><code>1 &lt;= nums.length &lt;= 10&lt;sup&gt;5&lt;/sup&gt;</code></li><li><code>1 &lt;= nums[i] &lt;= 10&lt;sup&gt;4&lt;/sup&gt;</code></li></ul><h4 id="Solution-2"><a href="#Solution-2" class="headerlink" title="Solution"></a>Solution</h4><p>Language: <strong>全部题目</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//思路：在删除其中一个节点k时，位于k之前的数字奇偶不变，k之后的奇偶相反</span></span><br><span class="line"><span class="comment">//依据这个思路，我们可以先将整个数组的奇偶数求出来</span></span><br><span class="line"><span class="comment">//再进行一次for循环（注意保存k之前的奇数和跟偶数和）</span></span><br><span class="line"><span class="comment">//则只需要判断删除的节点k是奇数节点还是偶数节点即可</span></span><br><span class="line"><span class="comment">//若是奇数节点，则在k节点之后的偶数和中删去k的值</span></span><br><span class="line"><span class="comment">//若是偶数节点，与上面相反</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">waysToMakeFair</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; nums)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> res=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> even_sum=<span class="number">0</span>,odd_sum=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;nums.size();++i)&#123;</span><br><span class="line">            <span class="keyword">if</span>(i%<span class="number">2</span>==<span class="number">1</span>)&#123;<span class="comment">//奇数</span></span><br><span class="line">                odd_sum+=nums[i];</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                even_sum+=nums[i];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> pre_odd=<span class="number">0</span>,pre_even=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;nums.size();++i)&#123;</span><br><span class="line">            <span class="keyword">int</span> temp_odd=<span class="number">0</span>,temp_even=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">if</span>(i%<span class="number">2</span>==<span class="number">1</span>)&#123;<span class="comment">//奇</span></span><br><span class="line">                odd_sum-=nums[i];</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                even_sum-=nums[i];</span><br><span class="line">            &#125;</span><br><span class="line">            temp_odd=pre_odd+even_sum;</span><br><span class="line">                temp_even=pre_even+odd_sum;</span><br><span class="line">            <span class="keyword">if</span>(temp_odd==temp_even)res++;</span><br><span class="line">            <span class="keyword">if</span>(i%<span class="number">2</span>==<span class="number">1</span>)&#123;<span class="comment">//奇数</span></span><br><span class="line">                pre_odd+=nums[i];</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                pre_even+=nums[i];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h1 id="5608-完成所有任务的最少初始能量"><a href="#5608-完成所有任务的最少初始能量" class="headerlink" title="5608. 完成所有任务的最少初始能量"></a><a href="https://leetcode-cn.com/problems/minimum-initial-energy-to-finish-tasks/">5608. 完成所有任务的最少初始能量</a></h1><p>Difficulty: <strong>困难</strong></p><p>给你一个任务数组 <code>tasks</code> ，其中 <code>tasks[i] = [actual&lt;sub style=&quot;display: inline;&quot;&gt;i&lt;/sub&gt;, minimum&lt;sub style=&quot;display: inline;&quot;&gt;i&lt;/sub&gt;]</code> ：</p><ul><li><code>actual&lt;sub style=&quot;display: inline;&quot;&gt;i&lt;/sub&gt;</code> 是完成第 <code>i</code> 个任务 <strong>需要耗费</strong> 的实际能量。</li><li><code>minimum&lt;sub style=&quot;display: inline;&quot;&gt;i&lt;/sub&gt;</code> 是开始第 <code>i</code> 个任务前需要达到的最低能量。</li></ul><p>比方说，如果任务为 <code>[10, 12]</code> 且你当前的能量为 <code>11</code> ，那么你不能开始这个任务。如果你当前的能量为 <code>13</code> ，你可以完成这个任务，且完成它后剩余能量为 <code>3</code> 。</p><p>你可以按照 <strong>任意顺序</strong> 完成任务。</p><p>请你返回完成所有任务的 <strong>最少</strong> 初始能量。</p><p><strong>示例 1：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">输入：tasks &#x3D; [[1,2],[2,4],[4,8]]</span><br><span class="line">输出：8</span><br><span class="line">解释：</span><br><span class="line">一开始有 8 能量，我们按照如下顺序完成任务：</span><br><span class="line">    - 完成第 3 个任务，剩余能量为 8 - 4 &#x3D; 4 。</span><br><span class="line">    - 完成第 2 个任务，剩余能量为 4 - 2 &#x3D; 2 。</span><br><span class="line">    - 完成第 1 个任务，剩余能量为 2 - 1 &#x3D; 1 。</span><br><span class="line">注意到尽管我们有能量剩余，但是如果一开始只有 7 能量是不能完成所有任务的，因为我们无法开始第 3 个任务。</span><br></pre></td></tr></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">输入：tasks &#x3D; [[1,3],[2,4],[10,11],[10,12],[8,9]]</span><br><span class="line">输出：32</span><br><span class="line">解释：</span><br><span class="line">一开始有 32 能量，我们按照如下顺序完成任务：</span><br><span class="line">    - 完成第 1 个任务，剩余能量为 32 - 1 &#x3D; 31 。</span><br><span class="line">    - 完成第 2 个任务，剩余能量为 31 - 2 &#x3D; 29 。</span><br><span class="line">    - 完成第 3 个任务，剩余能量为 29 - 10 &#x3D; 19 。</span><br><span class="line">    - 完成第 4 个任务，剩余能量为 19 - 10 &#x3D; 9 。</span><br><span class="line">    - 完成第 5 个任务，剩余能量为 9 - 8 &#x3D; 1 。</span><br></pre></td></tr></table></figure><p><strong>示例 3：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">输入：tasks &#x3D; [[1,7],[2,8],[3,9],[4,10],[5,11],[6,12]]</span><br><span class="line">输出：27</span><br><span class="line">解释：</span><br><span class="line">一开始有 27 能量，我们按照如下顺序完成任务：</span><br><span class="line">    - 完成第 5 个任务，剩余能量为 27 - 5 &#x3D; 22 。</span><br><span class="line">    - 完成第 2 个任务，剩余能量为 22 - 2 &#x3D; 20 。</span><br><span class="line">    - 完成第 3 个任务，剩余能量为 20 - 3 &#x3D; 17 。</span><br><span class="line">    - 完成第 1 个任务，剩余能量为 17 - 1 &#x3D; 16 。</span><br><span class="line">    - 完成第 4 个任务，剩余能量为 16 - 4 &#x3D; 12 。</span><br><span class="line">    - 完成第 6 个任务，剩余能量为 12 - 6 &#x3D; 6 。</span><br></pre></td></tr></table></figure><p><strong>提示：</strong></p><ul><li><code>1 &lt;= tasks.length &lt;= 10&lt;sup&gt;5&lt;/sup&gt;</code></li><li><code>1 &lt;= actual&lt;sub style=&quot;display: inline;&quot;&gt;i&lt;/sub&gt; &lt;= minimum&lt;sub style=&quot;display: inline;&quot;&gt;i&lt;/sub&gt; &lt;= 10&lt;sup&gt;4&lt;/sup&gt;</code></li></ul><h4 id="Solution-3"><a href="#Solution-3" class="headerlink" title="Solution"></a>Solution</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//贪心，对原数组进行排序再依次求即可</span></span><br><span class="line"><span class="comment">//排序的规则为,按照（要求-消费）的大小依次从大到小排</span></span><br><span class="line"><span class="comment">//若上面的一样，则按照要求大小从大到小排</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> cost,need,d;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">static</span> <span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(node &amp;a,node &amp;b)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(a.d==b.d)&#123;</span><br><span class="line">            <span class="keyword">return</span> a.need&gt;b.need;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> a.d&gt;b.d;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">minimumEffort</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; &gt;&amp; tasks)</span> </span>&#123;</span><br><span class="line">        <span class="function"><span class="built_in">vector</span>&lt;node&gt; <span class="title">v</span><span class="params">(tasks.size())</span></span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;v.size();++i)&#123;</span><br><span class="line">            v[i].need=tasks[i][<span class="number">1</span>];</span><br><span class="line">            v[i].cost=tasks[i][<span class="number">0</span>];</span><br><span class="line">            v[i].d=tasks[i][<span class="number">1</span>]-tasks[i][<span class="number">0</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        sort(v.begin(),v.end(),cmp);</span><br><span class="line">        <span class="keyword">int</span> res=<span class="number">0</span>,cur=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;v.size();++i)&#123;</span><br><span class="line">            <span class="comment">//cout&lt;&lt;v[i].cost&lt;&lt;endl;</span></span><br><span class="line">            <span class="keyword">if</span>(cur&gt;=v[i].need)&#123;</span><br><span class="line">                cur-=v[i].cost;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                res+=(v[i].need-cur);</span><br><span class="line">                cur=v[i].need;</span><br><span class="line">                cur-=v[i].cost;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【LeetCode每日】242.有效的字母异位词</title>
      <link href="2020/11/22/leetcode242/"/>
      <url>2020/11/22/leetcode242/</url>
      
        <content type="html"><![CDATA[<h3 id="242-有效的字母异位词"><a href="#242-有效的字母异位词" class="headerlink" title="242. 有效的字母异位词"></a><a href="https://leetcode-cn.com/problems/valid-anagram/">242. 有效的字母异位词</a></h3><p>Difficulty: <strong>简单</strong></p><p>给定两个字符串 <em>s</em> 和 <em>t</em> ，编写一个函数来判断 <em>t</em> 是否是 <em>s</em> 的字母异位词。</p><p><strong>示例 1:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入: s &#x3D; &quot;anagram&quot;, t &#x3D; &quot;nagaram&quot;</span><br><span class="line">输出: true</span><br></pre></td></tr></table></figure><p><strong>示例 2:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入: s &#x3D; &quot;rat&quot;, t &#x3D; &quot;car&quot;</span><br><span class="line">输出: false</span><br></pre></td></tr></table></figure><p><strong>说明:</strong><br>你可以假设字符串只包含小写字母。</p><p><strong>进阶:</strong><br>如果输入字符串包含 unicode 字符怎么办？你能否调整你的解法来应对这种情况？</p><h4 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h4><p>Language: <strong>全部题目</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//创建两个个26长度的存储两个字符串每个字符出现的个数</span></span><br><span class="line"><span class="comment">//如果两个数组相同则它们是异位词</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">isAnagram</span><span class="params">(<span class="built_in">string</span> s, <span class="built_in">string</span> t)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(s.size()!=t.size())<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        <span class="function"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; <span class="title">v1</span><span class="params">(<span class="number">26</span>,<span class="number">0</span>)</span></span>;</span><br><span class="line">        <span class="function"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; <span class="title">v2</span><span class="params">(<span class="number">26</span>,<span class="number">0</span>)</span></span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;s.size();++i)&#123;</span><br><span class="line">            v1[s[i]-<span class="string">&#x27;a&#x27;</span>]++;</span><br><span class="line">            v2[t[i]-<span class="string">&#x27;a&#x27;</span>]++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> v1==v2?<span class="literal">true</span>:<span class="literal">false</span>;      </span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World!</title>
      <link href="2020/11/20/hello-world/"/>
      <url>2020/11/20/hello-world/</url>
      
        <content type="html"><![CDATA[<p><em>以下为markdown功能测试：</em></p><h1 id="Heading-1"><a href="#Heading-1" class="headerlink" title="Heading 1"></a>Heading 1</h1><h2 id="Heading-2"><a href="#Heading-2" class="headerlink" title="Heading 2"></a>Heading 2</h2><h3 id="Heading-3"><a href="#Heading-3" class="headerlink" title="Heading 3"></a>Heading 3</h3><h4 id="Heading-4"><a href="#Heading-4" class="headerlink" title="Heading 4"></a>Heading 4</h4><h5 id="Heading-5"><a href="#Heading-5" class="headerlink" title="Heading 5"></a>Heading 5</h5><h6 id="Heading-6"><a href="#Heading-6" class="headerlink" title="Heading 6"></a>Heading 6</h6><h1 id="Heading-1-link-Heading-link"><a href="#Heading-1-link-Heading-link" class="headerlink" title="Heading 1 link Heading link"></a>Heading 1 link <a href="https://github.com/pandao/editor.md" title="Heading link">Heading link</a></h1><h2 id="Heading-2-link-Heading-link"><a href="#Heading-2-link-Heading-link" class="headerlink" title="Heading 2 link Heading link"></a>Heading 2 link <a href="https://github.com/pandao/editor.md" title="Heading link">Heading link</a></h2><h3 id="Heading-3-link-Heading-link"><a href="#Heading-3-link-Heading-link" class="headerlink" title="Heading 3 link Heading link"></a>Heading 3 link <a href="https://github.com/pandao/editor.md" title="Heading link">Heading link</a></h3><h4 id="Heading-4-link-Heading-link-Heading-link-Heading-link"><a href="#Heading-4-link-Heading-link-Heading-link-Heading-link" class="headerlink" title="Heading 4 link Heading link Heading link Heading link"></a>Heading 4 link <a href="https://github.com/pandao/editor.md" title="Heading link">Heading link</a> Heading link <a href="https://github.com/pandao/editor.md" title="Heading link">Heading link</a></h4><h5 id="Heading-5-link-Heading-link"><a href="#Heading-5-link-Heading-link" class="headerlink" title="Heading 5 link Heading link"></a>Heading 5 link <a href="https://github.com/pandao/editor.md" title="Heading link">Heading link</a></h5><h6 id="Heading-6-link-Heading-link"><a href="#Heading-6-link-Heading-link" class="headerlink" title="Heading 6 link Heading link"></a>Heading 6 link <a href="https://github.com/pandao/editor.md" title="Heading link">Heading link</a></h6><h4 id="标题（用底线的形式）Heading-underline"><a href="#标题（用底线的形式）Heading-underline" class="headerlink" title="标题（用底线的形式）Heading (underline)"></a>标题（用底线的形式）Heading (underline)</h4><h1 id="This-is-an-H1"><a href="#This-is-an-H1" class="headerlink" title="This is an H1"></a>This is an H1</h1><h2 id="This-is-an-H2"><a href="#This-is-an-H2" class="headerlink" title="This is an H2"></a>This is an H2</h2><h3 id="字符效果和横线等"><a href="#字符效果和横线等" class="headerlink" title="字符效果和横线等"></a>字符效果和横线等</h3><hr><p><del>删除线</del> <s>删除线（开启识别HTML标签时）</s><br><em>斜体字</em>      <em>斜体字</em><br><strong>粗体</strong>  <strong>粗体</strong><br><strong><em>粗斜体</em></strong> <strong><em>粗斜体</em></strong></p><p>上标：X<sub>2</sub>，下标：O<sup>2</sup></p><p><strong>缩写(同HTML的abbr标签)</strong></p><blockquote><p>即更长的单词或短语的缩写形式，前提是开启识别HTML标签时，已默认开启</p></blockquote><p>The <abbr title="Hyper Text Markup Language">HTML</abbr> specification is maintained by the <abbr title="World Wide Web Consortium">W3C</abbr>.</p><h3 id="引用-Blockquotes"><a href="#引用-Blockquotes" class="headerlink" title="引用 Blockquotes"></a>引用 Blockquotes</h3><blockquote><p>引用文本 Blockquotes</p></blockquote><p>引用的行内混合 Blockquotes</p><blockquote><p>引用：如果想要插入空白换行<code>即&lt;br /&gt;标签</code>，在插入处先键入两个以上的空格然后回车即可，<a href="http://localhost/">普通链接</a>。</p></blockquote><h3 id="锚点与链接-Links"><a href="#锚点与链接-Links" class="headerlink" title="锚点与链接 Links"></a>锚点与链接 Links</h3><p><a href="http://localhost/">普通链接</a></p><p><a href="http://localhost/" title="普通链接带标题">普通链接带标题</a></p><p>直接链接：<a href="https://github.com">https://github.com</a></p><p><a href="http://www.this-anchor-link.com/">锚点链接</a> </p><p>GFM a-tail link @pandao</p><blockquote><p>@pandao</p></blockquote><h3 id="多语言代码高亮-Codes"><a href="#多语言代码高亮-Codes" class="headerlink" title="多语言代码高亮 Codes"></a>多语言代码高亮 Codes</h3><h4 id="行内代码-Inline-code"><a href="#行内代码-Inline-code" class="headerlink" title="行内代码 Inline code"></a>行内代码 Inline code</h4><p>执行命令：<code>npm install marked</code></p><h4 id="缩进风格"><a href="#缩进风格" class="headerlink" title="缩进风格"></a>缩进风格</h4><p>即缩进四个空格，也做为实现类似<code>&lt;pre&gt;</code>预格式化文本(Preformatted Text)的功能。</p><pre><code>&lt;?php    echo &quot;Hello world!&quot;;?&gt;</code></pre><p>预格式化文本：</p><pre><code>| First Header  | Second Header || ------------- | ------------- || Content Cell  | Content Cell  || Content Cell  | Content Cell  |</code></pre><h4 id="JS代码"><a href="#JS代码" class="headerlink" title="JS代码　"></a>JS代码　</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&quot;Hello world!&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> box = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> box.fn.init();</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    box.prototype = box.fn = &#123;</span><br><span class="line">        init : <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">&#x27;box.init()&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">        &#125;,</span><br><span class="line"></span><br><span class="line">add : <span class="function"><span class="keyword">function</span>(<span class="params">str</span>)</span>&#123;</span><br><span class="line">alert(<span class="string">&quot;add&quot;</span>, str);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">&#125;,</span><br><span class="line"></span><br><span class="line">remove : <span class="function"><span class="keyword">function</span>(<span class="params">str</span>)</span>&#123;</span><br><span class="line">alert(<span class="string">&quot;remove&quot;</span>, str);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">&#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    </span><br><span class="line">    box.fn.init.prototype = box.fn;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">window</span>.box =box;</span><br><span class="line">&#125;)();</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> testBox = box();</span><br><span class="line">testBox.add(<span class="string">&quot;jQuery&quot;</span>).remove(<span class="string">&quot;jQuery&quot;</span>);</span><br></pre></td></tr></table></figure><h4 id="HTML代码-HTML-codes"><a href="#HTML代码-HTML-codes" class="headerlink" title="HTML代码 HTML codes"></a>HTML代码 HTML codes</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mate</span> <span class="attr">charest</span>=<span class="string">&quot;utf-8&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>Hello world!<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Hello world!<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="图片-Images"><a href="#图片-Images" class="headerlink" title="图片 Images"></a>图片 Images</h3><p>Image:</p><p><img src="https://pandao.github.io/editor.md/examples/images/4.jpg" alt=""></p><blockquote><p>Follow your heart.</p></blockquote><p><img src="https://pandao.github.io/editor.md/examples/images/8.jpg" alt=""></p><blockquote><p>图为：厦门白城沙滩</p></blockquote><p>图片加链接 (Image + Link)：</p><p><a href="https://pandao.github.io/editor.md/examples/images/7.jpg" title="李健首张专辑《似水流年》封面"><img src="https://pandao.github.io/editor.md/examples/images/7.jpg" alt=""></a></p><blockquote><p>图为：李健首张专辑《似水流年》封面</p></blockquote><hr><h3 id="列表-Lists"><a href="#列表-Lists" class="headerlink" title="列表 Lists"></a>列表 Lists</h3><h4 id="无序列表（减号）Unordered-Lists"><a href="#无序列表（减号）Unordered-Lists" class="headerlink" title="无序列表（减号）Unordered Lists (-)"></a>无序列表（减号）Unordered Lists (-)</h4><ul><li>列表一</li><li>列表二</li><li>列表三</li></ul><h4 id="无序列表（星号）Unordered-Lists"><a href="#无序列表（星号）Unordered-Lists" class="headerlink" title="无序列表（星号）Unordered Lists (*)"></a>无序列表（星号）Unordered Lists (*)</h4><ul><li>列表一</li><li>列表二</li><li>列表三</li></ul><h4 id="无序列表（加号和嵌套）Unordered-Lists"><a href="#无序列表（加号和嵌套）Unordered-Lists" class="headerlink" title="无序列表（加号和嵌套）Unordered Lists (+)"></a>无序列表（加号和嵌套）Unordered Lists (+)</h4><ul><li>列表一</li><li>列表二<ul><li>列表二-1</li><li>列表二-2</li><li>列表二-3</li></ul></li><li>列表三<ul><li>列表一</li><li>列表二</li><li>列表三</li></ul></li></ul><h4 id="有序列表-Ordered-Lists"><a href="#有序列表-Ordered-Lists" class="headerlink" title="有序列表 Ordered Lists (-)"></a>有序列表 Ordered Lists (-)</h4><ol><li>第一行</li><li>第二行</li><li>第三行</li></ol><h4 id="GFM-task-list"><a href="#GFM-task-list" class="headerlink" title="GFM task list"></a>GFM task list</h4><ul><li>[x] GFM task list 1</li><li>[x] GFM task list 2</li><li>[ ] GFM task list 3<ul><li>[ ] GFM task list 3-1</li><li>[ ] GFM task list 3-2</li><li>[ ] GFM task list 3-3</li></ul></li><li>[ ] GFM task list 4<ul><li>[ ] GFM task list 4-1</li><li>[ ] GFM task list 4-2</li></ul></li></ul><hr><h3 id="绘制表格-Tables"><a href="#绘制表格-Tables" class="headerlink" title="绘制表格 Tables"></a>绘制表格 Tables</h3><div class="table-container"><table><thead><tr><th>项目</th><th style="text-align:right">价格</th><th style="text-align:center">数量</th></tr></thead><tbody><tr><td>计算机</td><td style="text-align:right">$1600</td><td style="text-align:center">5</td></tr><tr><td>手机</td><td style="text-align:right">$12</td><td style="text-align:center">12</td></tr><tr><td>管线</td><td style="text-align:right">$1</td><td style="text-align:center">234</td></tr></tbody></table></div><div class="table-container"><table><thead><tr><th>First Header</th><th>Second Header</th></tr></thead><tbody><tr><td>Content Cell</td><td>Content Cell</td></tr><tr><td>Content Cell</td><td>Content Cell</td></tr></tbody></table></div><div class="table-container"><table><thead><tr><th>First Header</th><th>Second Header</th></tr></thead><tbody><tr><td>Content Cell</td><td>Content Cell</td></tr><tr><td>Content Cell</td><td>Content Cell</td></tr></tbody></table></div><div class="table-container"><table><thead><tr><th>Function name</th><th>Description</th></tr></thead><tbody><tr><td><code>help()</code></td><td>Display the help window.</td></tr><tr><td><code>destroy()</code></td><td><strong>Destroy your computer!</strong></td></tr></tbody></table></div><div class="table-container"><table><thead><tr><th style="text-align:left">Left-Aligned</th><th style="text-align:center">Center Aligned</th><th style="text-align:right">Right Aligned</th></tr></thead><tbody><tr><td style="text-align:left">col 3 is</td><td style="text-align:center">some wordy text</td><td style="text-align:right">$1600</td></tr><tr><td style="text-align:left">col 2 is</td><td style="text-align:center">centered</td><td style="text-align:right">$12</td></tr><tr><td style="text-align:left">zebra stripes</td><td style="text-align:center">are neat</td><td style="text-align:right">$1</td></tr></tbody></table></div><div class="table-container"><table><thead><tr><th>Item</th><th style="text-align:right">Value</th></tr></thead><tbody><tr><td>Computer</td><td style="text-align:right">$1600</td></tr><tr><td>Phone</td><td style="text-align:right">$12</td></tr><tr><td>Pipe</td><td style="text-align:right">$1</td></tr></tbody></table></div><hr><h4 id="特殊符号-HTML-Entities-Codes"><a href="#特殊符号-HTML-Entities-Codes" class="headerlink" title="特殊符号 HTML Entities Codes"></a>特殊符号 HTML Entities Codes</h4><p>&copy; &amp;  &uml; &trade; &iexcl; &pound;<br>&amp; &lt; &gt; &yen; &euro; &reg; &plusmn; &para; &sect; &brvbar; &macr; &laquo; &middot; </p><p>X&sup2; Y&sup3; &frac34; &frac14;  &times;  &divide;   &raquo;</p><p>18&ordm;C  &quot;  &apos;</p><h3 id="Emoji表情-smiley"><a href="#Emoji表情-smiley" class="headerlink" title="Emoji表情 :smiley:"></a>Emoji表情 :smiley:</h3><blockquote><p>Blockquotes :star:</p></blockquote><h4 id="GFM-task-lists-amp-Emoji-amp-fontAwesome-icon-emoji-amp-editormd-logo-emoji-editormd-logo-5x"><a href="#GFM-task-lists-amp-Emoji-amp-fontAwesome-icon-emoji-amp-editormd-logo-emoji-editormd-logo-5x" class="headerlink" title="GFM task lists &amp; Emoji &amp; fontAwesome icon emoji &amp; editormd logo emoji :editormd-logo-5x:"></a>GFM task lists &amp; Emoji &amp; fontAwesome icon emoji &amp; editormd logo emoji :editormd-logo-5x:</h4><ul><li>[x] :smiley: @mentions, :smiley: #refs, <a href="">links</a>, <strong>formatting</strong>, and <del>tags</del> supported :editormd-logo:;</li><li>[x] list syntax required (any unordered or ordered list supported) :editormd-logo-3x:;</li><li>[x] [ ] :smiley: this is a complete item :smiley:;</li><li>[ ] []this is an incomplete item <a href="#">test link</a> :fa-star: @pandao; </li><li>[ ] [ ]this is an incomplete item :fa-star: :fa-gear:;<ul><li>[ ] :smiley: this is an incomplete item <a href="#">test link</a> :fa-star: :fa-gear:;</li><li>[ ] :smiley: this is  :fa-star: :fa-gear: an incomplete item <a href="#">test link</a>;</li></ul></li></ul><h4 id="反斜杠-Escape"><a href="#反斜杠-Escape" class="headerlink" title="反斜杠 Escape"></a>反斜杠 Escape</h4><p>*literal asterisks*</p><h3 id="科学公式-TeX-KaTeX"><a href="#科学公式-TeX-KaTeX" class="headerlink" title="科学公式 TeX(KaTeX)"></a>科学公式 TeX(KaTeX)</h3><script type="math/tex; mode=display">E=mc^2</script><p>行内的公式<script type="math/tex">E=mc^2</script>行内的公式，行内的<script type="math/tex">E=mc^2</script>公式。</p><script type="math/tex; mode=display">\(\sqrt{3x-1}+(1+x)^2\)</script><script type="math/tex; mode=display">\sin(\alpha)^{\theta}=\sum_{i=0}^{n}(x^i + \cos(f))</script><p>多行公式：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">\displaystyle</span><br><span class="line">\left( \sum\_&#123;k&#x3D;1&#125;^n a\_k b\_k \right)^2</span><br><span class="line">\leq</span><br><span class="line">\left( \sum\_&#123;k&#x3D;1&#125;^n a\_k^2 \right)</span><br><span class="line">\left( \sum\_&#123;k&#x3D;1&#125;^n b\_k^2 \right)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">\displaystyle </span><br><span class="line">    \frac&#123;1&#125;&#123;</span><br><span class="line">        \Bigl(\sqrt&#123;\phi \sqrt&#123;5&#125;&#125;-\phi\Bigr) e^&#123;</span><br><span class="line">        \frac25 \pi&#125;&#125; &#x3D; 1+\frac&#123;e^&#123;-2\pi&#125;&#125; &#123;1+\frac&#123;e^&#123;-4\pi&#125;&#125; &#123;</span><br><span class="line">        1+\frac&#123;e^&#123;-6\pi&#125;&#125;</span><br><span class="line">        &#123;1+\frac&#123;e^&#123;-8\pi&#125;&#125;</span><br><span class="line">         &#123;1+\cdots&#125; &#125;</span><br><span class="line">        &#125; </span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">f(x) = <span class="keyword">\int</span><span class="built_in">_</span>&#123;-<span class="keyword">\infty</span>&#125;<span class="built_in">^</span><span class="keyword">\infty</span></span><br><span class="line">    <span class="keyword">\hat</span> f(<span class="keyword">\xi</span>)<span class="keyword">\,</span>e<span class="built_in">^</span>&#123;2 <span class="keyword">\pi</span> i <span class="keyword">\xi</span> x&#125;</span><br><span class="line">    <span class="keyword">\,</span>d<span class="keyword">\xi</span></span><br></pre></td></tr></table></figure><h3 id="绘制流程图-Flowchart"><a href="#绘制流程图-Flowchart" class="headerlink" title="绘制流程图 Flowchart"></a>绘制流程图 Flowchart</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">st&#x3D;&gt;start: 用户登陆</span><br><span class="line">op&#x3D;&gt;operation: 登陆操作</span><br><span class="line">cond&#x3D;&gt;condition: 登陆成功 Yes or No?</span><br><span class="line">e&#x3D;&gt;end: 进入后台</span><br><span class="line"></span><br><span class="line">st-&gt;op-&gt;cond</span><br><span class="line">cond(yes)-&gt;e</span><br><span class="line">cond(no)-&gt;op</span><br></pre></td></tr></table></figure><h3 id="绘制序列图-Sequence-Diagram"><a href="#绘制序列图-Sequence-Diagram" class="headerlink" title="绘制序列图 Sequence Diagram"></a>绘制序列图 Sequence Diagram</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Andrew-&gt;China: Says Hello </span><br><span class="line">Note right of China: China thinks\nabout it </span><br><span class="line">China--&gt;Andrew: How are you? </span><br><span class="line">Andrew-&gt;&gt;China: I am good thanks!</span><br></pre></td></tr></table></figure><h3 id="End"><a href="#End" class="headerlink" title="End"></a>End</h3>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
